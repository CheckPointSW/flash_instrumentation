package 
{
	import __AS3__.vec.Vector;
    import flash.utils.ByteArray;

    import flash.utils.*;
	import flash.utils.ByteArray;
    import flash.events.Event;
    import flash.utils.*;
	import flash.utils.getQualifiedClassName;
	import mx.utils.StringUtil;

	public class exploit_common 
	{
		
        public static function debugPrint(obj:Object)
        {
			if (obj is String)
			{
				instrument("String (" + obj.length.toString() + "): " + obj);
			}
			else if (obj is ByteArray) 
			{
				var bas:String = get_uint_bytearray(obj as ByteArray);
				var splitS:Array = bas.split(" ");
				
				instrument("ByteArray (" + splitS.length.toString() + "): " + bas);
			}
			else if (obj is Number)
			{
				if (obj != 0){
				instrument("Number: " + obj.toString());
				}
			}
			else if (obj is Vector.<*> 
					|| obj is Vector.<Number>
					|| obj is Vector.<int>
					|| obj is Vector.<uint>
					|| obj is Vector.<String>)
			{
				instrument("Vector (" + obj.length.toString() + ") : " + obj.toString());
			}
			else
			{
				instrument("Unknown type (" +typeof(obj) + ") : " + obj.toString());
			}
        }
        
		public static function instrument(str:String)
		{
			JSON.stringify(str);
		}

		public static function get_uint_bytearray(ba:ByteArray)
		{
			var str:String = "";
			ba.position = 0;
			while (ba.bytesAvailable) {
                str += "0x" + (uint2hex(ba.readUnsignedByte())) + " ";
            }
			ba.position = 0;
			return(str.substr(0, str.length-1));
		}
		
		public static function uint2hex(dec:uint):String {
			
			var digits:String = "0123456789ABCDEF";
			var hex:String = '';
			
			while (dec > 0) {
				var next:uint = dec & 0xF;
				dec >>= 4;
				hex = digits.charAt(next) + hex;
			}
					
			if (hex.length == 0) hex = '00'
			if (hex.length == 1) hex = '0' + hex;
			return hex;
		}
		
	}

}